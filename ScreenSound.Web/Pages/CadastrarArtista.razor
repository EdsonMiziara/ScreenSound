@page "/CadastrarArtista"
@inject ArtistaAPI artistasAPI
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">

        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
        Variant="Variant.Outlined"
        @bind-Value="nome"
        Required="true"
        RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
        Variant="Variant.Outlined"
        @bind-Value="biografia"
        Lines="4"
        Required="true"
        RequiredError="Campo obrigatório." />

        @if (!string.IsNullOrEmpty(fileImage))
        {
            <MudImage Class="mt-4" Src="@fileImage" Alt="Imagem do Artista" />
        }

        <div class="mt-4">
            <InputFile OnChange="HandleFileChange"
            accept=".jpeg"
            class="d-none"
            id="uploadInput" />

            <label for="uploadInput">
                <MudButton Variant="Variant.Filled"
                Color="Color.Primary"
                StartIcon="@Icons.Material.Filled.PhotoCamera"
                HtmlTag="span">
                    Foto de Perfil
                </MudButton>
            </label>
        </div>

        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled"
            @onclick="Cadastrar"
            Color="Color.Primary"
            Class="ml-auto">
                Cadastrar
            </MudButton>
        </div>

        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled"
            @onclick="Voltar"
            Color="Color.Primary"
            Class="ml-auto">
                Lista de Artistas
            </MudButton>
        </div>

    </MudForm>

</MudPaper>

@code {
    bool success;
    string[] errors = { };
    MudForm form;
    private string? nome;
    private string? biografia;
    private string? fileImage;
    private string? fotoPerfil;

    private async Task Cadastrar()
    {
        try {
            var request = new ArtistaRequest(nome!, biografia!, fotoPerfil);
            await artistasAPI.AddArtistaAsync(request);
            Snackbar.Add("Artista cadastrado com sucesso!", Severity.Success);
            navigationManager.NavigateTo("/Artistas");
        }
        catch
        {
            // Logger.LogInformation("Erro ao cadastrar artista!");
        }
    }

    IList<IBrowserFile> files = new List<IBrowserFile>();


    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var format = "image/jpeg";
        var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

        using var stream = resizedImage.OpenReadStream();
        using var ms = new MemoryStream();
        await stream.CopyToAsync(ms);

        var imageUpload = Convert.ToBase64String(ms.ToArray());
        fileImage = $"data:{format};base64,{imageUpload}";

        fotoPerfil = imageUpload;
    }

    private void Voltar()
    {
        navigationManager.NavigateTo("/Artistas");
    }
}
